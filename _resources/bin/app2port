#!/usr/bin/env python
from os.path import basename, join as path_join
from typing import List
import os
import plistlib
import re
import subprocess as sp
import sys


def has_libstdcxx(start: str):
    dirpath: str
    dirnames: List[str]
    filenames: List[str]
    for dirpath, dirnames, filenames in os.walk(start):
        for fn in filenames:
            fpath = path_join(dirpath, fn)
            try:
                is_exec = os.stat(fpath).st_mode & 1
            except FileNotFoundError:
                continue
            if is_exec:
                proc = sp.run(['otool', '-L', fpath],
                              capture_output=True,
                              text=True)
                if 'libstdc++' in proc.stdout:
                    return True
    return False


def main():
    configure_cxx_stdlib = ''
    if has_libstdcxx(sys.argv[1]):
        configure_cxx_stdlib = '\nconfigure.cxx_stdlib libstdc++\n'

    name = basename(sys.argv[1].rstrip('/'))
    pkg_name = name.lower().replace(' ', '-').replace('.app', '')
    plist_path = path_join(sys.argv[1], 'Contents', 'Info.plist')
    try:
        with open(plist_path, 'rb') as f:
            pl = plistlib.load(f)
    except IOError:
        print('Info.plist not found', file=sys.stderr)
        return 1

    try:
        version = re.sub(r'^v', '', pl['CFBundleShortVersionString'])
    except KeyError:
        version = 'VERSION'

    print('''PortSystem 1.0

name                {display_name}
version             {version}
categories          aqua
platforms           macosx
maintainers         {{tat.sh:z @Tatsh}}
description         DESCRIPTION
long_description    ${{description}}
homepage            HOMEPAGE
distfiles           DISTFILES
master_sites        URL

# CHECKSUMS

livecheck.type      regex
livecheck.url       ${{homepage}}
livecheck.regex     REGEX

use_configure       no
use_zip             yes
extract.only        ZIPFILE
extract.mkdir       yes
{configure_cxx_stdlib}
build {{}}

destroot {{
    file copy "${{worksrcpath}}/{name}" "${{destroot}}/${{applications_dir}}/"
}}'''.format(name=name,
             display_name=pkg_name,
             configure_cxx_stdlib=configure_cxx_stdlib,
             version=version))


if __name__ == '__main__':
    sys.exit(main())
