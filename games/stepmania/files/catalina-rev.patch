--- b/src/arch/LowLevelWindow/LowLevelWindow_MacOSX.mm
+++ a/src/arch/LowLevelWindow/LowLevelWindow_MacOSX.mm
@@ -301,9 +301,7 @@
 	
 	m_CurrentParams.windowed = true; // We are essentially windowed to begin with.
 	SetActualParamsFromMode( CGDisplayCurrentMode(kCGDirectMainDisplay) );
+	HOOKS->SetHasFocus( [NSApp isActive] );
-    dispatch_sync(dispatch_get_main_queue(), ^{
-        HOOKS->SetHasFocus( [NSApp isActive] );;
-    });
 }
 
 LowLevelWindow_MacOSX::~LowLevelWindow_MacOSX()
@@ -384,11 +382,9 @@
 		}
 		
 		[m_WindowDelegate performSelectorOnMainThread:@selector(setParams:) withObject:[NSValue valueWithPointer:&p] waitUntilDone:YES];
+		[m_Context setView:[((SMWindowDelegate *)m_WindowDelegate)->m_Window contentView]];
+		[m_Context update];
+		[m_Context makeCurrentContext];
-        dispatch_sync(dispatch_get_main_queue(), ^{
-            [m_Context setView:[((SMWindowDelegate *)m_WindowDelegate)->m_Window contentView]];
-            [m_Context update];
-        });
-        [m_Context makeCurrentContext];
 		m_CurrentParams.windowed = true;
 		SetActualParamsFromMode( CGDisplayCurrentMode(kCGDirectMainDisplay) );
 		m_CurrentParams.vsync = p.vsync; // hack
@@ -548,11 +544,8 @@
 	}
 	else
 	{
+		NSSize size = [[((SMWindowDelegate *)m_WindowDelegate)->m_Window contentView] frame].size;
+		
-        __block NSSize size;
-        dispatch_sync(dispatch_get_main_queue(), ^{
-            size = [[((SMWindowDelegate *)m_WindowDelegate)->m_Window contentView] frame].size;
-        });
-        
 		m_CurrentParams.width = int(size.width);
 		m_CurrentParams.height = int(size.height);
 	}
