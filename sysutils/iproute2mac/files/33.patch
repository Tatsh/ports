From 6beb0ca19dec86f9465368cf355802f1815c69c7 Mon Sep 17 00:00:00 2001
From: Kenneth Endfinger <kaendfinger@gmail.com>
Date: Fri, 11 Oct 2019 14:28:03 -0500
Subject: [PATCH] Add Support for Python 3

---
 AUTHORS   |  1 +
 src/ip.py | 64 +++++++++++++++++++++++++++----------------------------
 2 files changed, 33 insertions(+), 32 deletions(-)

diff --git a/AUTHORS b/AUTHORS
index 2eff544..4836758 100644
--- a/AUTHORS
+++ b/AUTHORS
@@ -9,3 +9,4 @@ Ben Sholdice
 Nicolas Peters
 Wèi Cōngruì
 Chen
+Kenneth Endfinger
diff --git a/src/ip.py b/src/ip.py
index f551046..4948a07 100755
--- a/src/ip.py
+++ b/src/ip.py
@@ -1,4 +1,4 @@
-#!/usr/bin/python
+#!/usr/bin/env python3
 # encoding: utf8
 
 
@@ -13,7 +13,7 @@
 """
 
 import sys
-import commands
+import subprocess
 import re
 import string
 import random
@@ -38,10 +38,10 @@ def perror(*args):
     sys.stderr.write("\n")
 
 def execute_cmd(cmd):
-  print 'Executing: %s' % cmd
-  status, output = commands.getstatusoutput(cmd)
+  print('Executing: %s' % cmd)
+  status, output = subprocess.getstatusoutput(cmd)
   if status == 0:  # unix/linux commands 0 true, 1 false
-    print output
+    print(output)
     return True
   else:
     perror(output)
@@ -78,7 +78,7 @@ def randomMAC():
     random.randint(0x00, 0x7f),
     random.randint(0x00, 0xff),
     random.randint(0x00, 0xff) ]
-  return ':'.join(map(lambda x: "%02x" % x, mac))
+  return ':'.join(["%02x" % x for x in mac])
 
 # Help
 def do_help():
@@ -152,9 +152,9 @@ def do_route(argv,af):
 
 def do_route_list(af):
   if af==6:
-    status,res = commands.getstatusoutput(NETSTAT + " -nr -f inet6 2>/dev/null")
+    status,res = subprocess.getstatusoutput(NETSTAT + " -nr -f inet6 2>/dev/null")
   else:
-    status,res = commands.getstatusoutput(NETSTAT + " -nr -f inet 2>/dev/null")
+    status,res = subprocess.getstatusoutput(NETSTAT + " -nr -f inet 2>/dev/null")
   if status:
       perror(res)
       return False
@@ -171,9 +171,9 @@ def do_route_list(af):
       if flags.find('W') != -1:
         continue
       if re.match("link.+",gw):
-        print target + ' dev ' + dev + '  scope link'
+        print(target + ' dev ' + dev + '  scope link')
       else:
-        print target + ' via ' + gw + ' dev ' + dev
+        print(target + ' via ' + gw + ' dev ' + dev)
     else:
       target = ra[0]
       gw     = ra[1]
@@ -186,7 +186,7 @@ def do_route_list(af):
       if flags.find('W') != -1:
         continue
       if target == 'default':
-        print 'default via ' + gw + ' dev ' + dev
+        print('default via ' + gw + ' dev ' + dev)
       else:
         dots=target.count('.')
         if target.find('/') == -1:
@@ -203,9 +203,9 @@ def do_route_list(af):
           addr = addr + '.0.0.0'
 
         if re.match("link.+",gw):
-          print addr + '/' + str(netmask)+ ' dev ' + dev + '  scope link'
+          print(addr + '/' + str(netmask)+ ' dev ' + dev + '  scope link')
         else:
-          print addr + '/' + str(netmask) + ' via ' + gw + ' dev ' + dev
+          print(addr + '/' + str(netmask) + ' via ' + gw + ' dev ' + dev)
   return True
 
 def do_route_add(argv,af):
@@ -231,7 +231,7 @@ def do_route_del(argv,af):
 
 def do_route_flush(argv,af):
   target=argv[0]
-  status,res = commands.getstatusoutput(SUDO+" "+ROUTE + " -n flush ")
+  status,res = subprocess.getstatusoutput(SUDO+" "+ROUTE + " -n flush ")
   if status: # unix status or not in table
     perror(res)
     return False
@@ -248,7 +248,7 @@ def do_route_get(argv,af):
   else:
     family=socket.AF_INET
 
-  status,res = commands.getstatusoutput(ROUTE + " -n get " + inet + target)
+  status,res = subprocess.getstatusoutput(ROUTE + " -n get " + inet + target)
   if status: # unix status or not in table
     perror(res)
     return False
@@ -272,9 +272,9 @@ def do_route_get(argv,af):
     src = ""
 
   if via=="":
-    print route_to + " dev " + dev + src
+    print(route_to + " dev " + dev + src)
   else:
-    print route_to + " via " + via + " dev " + dev + src
+    print(route_to + " via " + via + " dev " + dev + src)
   return True
 
 # Addr Module
@@ -315,7 +315,7 @@ def do_addr_show(argv,af):
   else:
     param="-a"
 
-  status,res = commands.getstatusoutput(IFCONFIG + " " + param + " 2>/dev/null")
+  status,res = subprocess.getstatusoutput(IFCONFIG + " " + param + " 2>/dev/null")
   if status:
     if res == "": perror(param + ' not found')
     else: perror(res)
@@ -353,7 +353,7 @@ def do_addr_show(argv,af):
 
   if address_count > 0:
     output += buff
-  print output.rstrip()
+  print(output.rstrip())
   return True
 
 def do_addr_add(argv,af):
@@ -425,14 +425,14 @@ def do_link_show(argv,af):
   else:
     param="-a"
 
-  status,res = commands.getstatusoutput(IFCONFIG + " " + param + " 2>/dev/null")
+  status,res = subprocess.getstatusoutput(IFCONFIG + " " + param + " 2>/dev/null")
   if status: # unix status
     if res == "": perror(param + ' not found')
     else: perror(res)
     return False
   for r in res.split('\n'):
     if not re.match('\s+inet.+',r):
-      print r
+      print(r)
   return True
 
 def do_link_set(argv,af):
@@ -454,18 +454,18 @@ def do_link_set(argv,af):
       elif arg=='down':
         if not execute_cmd(SUDO + " " + IFCONFIG + " " + dev + " down"): return False
       elif arg in ['address','addr','lladdr']:
-        addr=args.next()
+        addr=next(args)
         if addr in ['random','rand']:
           addr=randomMAC()
         elif addr=='factory':
-          (status,res)=commands.getstatusoutput(NETWORKSETUP + " -listallhardwareports")
+          (status,res)=subprocess.getstatusoutput(NETWORKSETUP + " -listallhardwareports")
           if status != 0:
             return False
           details=re.findall('^(?:Device|Ethernet Address): (.+)$', res, re.MULTILINE)
           addr=details[details.index(dev)+1]
         if not execute_cmd(SUDO + " " + IFCONFIG + " " + dev + " lladdr " + addr): return False
       elif arg=='mtu':
-        mtu=int(args.next())
+        mtu=int(next(args))
         if not execute_cmd(SUDO + " " + IFCONFIG + " " + dev + " mtu " + str(mtu)): return False
   except:
     return False
@@ -481,7 +481,7 @@ def do_neigh(argv,af):
     idev = argv[2]
   if (not argv) or (argv[0] in ['show','sh','s','list','lst','ls']):
     if af != 4:
-      (status,res) = commands.getstatusoutput(NDP + " -an 2>/dev/null")
+      (status,res) = subprocess.getstatusoutput(NDP + " -an 2>/dev/null")
       if status != 0:
         return False
       res=res.split('\n')
@@ -497,14 +497,14 @@ def do_neigh(argv,af):
         else:
           stat='INCOMPLETE'
         if l2a=='(incomplete)' and stat!='REACHABLE':
-          print l3a + ' dev ' + dev + ' INCOMPLETE'
+          print(l3a + ' dev ' + dev + ' INCOMPLETE')
         else:
-          print l3a + ' dev ' + dev + ' lladdr ' + l2a + ' ' + stat
+          print(l3a + ' dev ' + dev + ' lladdr ' + l2a + ' ' + stat)
     if af != 6:
       if idev:
-        (status,res)=commands.getstatusoutput(ARP + " -anli " + idev +" 2>/dev/null")
+        (status,res)=subprocess.getstatusoutput(ARP + " -anli " + idev +" 2>/dev/null")
       else:
-        (status,res)=commands.getstatusoutput(ARP + " -anl 2>/dev/null")
+        (status,res)=subprocess.getstatusoutput(ARP + " -anl 2>/dev/null")
       if status != 0:
         return False
       res=res.split('\n')
@@ -515,9 +515,9 @@ def do_neigh(argv,af):
         l2a=ra[1]
         dev=ra[4]
         if l2a=='(incomplete)':
-          print l3a + ' dev ' + dev + ' INCOMPLETE'
+          print(l3a + ' dev ' + dev + ' INCOMPLETE')
         else:
-          print l3a + ' dev ' + dev + ' lladdr ' + l2a + ' REACHABLE'
+          print(l3a + ' dev ' + dev + ' lladdr ' + l2a + ' REACHABLE')
   # TODO: delete, add
   elif argv[0] in ['f', 'fl', 'flush']:
     if not idev:
@@ -564,7 +564,7 @@ def main(argv):
     return False
 
   if argv[0] == '-V':
-    print "iproute2mac, v" + VERSION
+    print("iproute2mac, v" + VERSION)
     exit(0)
 
   if argv[0] == 'help':
