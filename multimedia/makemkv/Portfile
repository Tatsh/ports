# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4
PortSystem          1.0

name                makemkv
version             1.15.3

categories          multimedia aqua
license             Restrictive
platforms           macosx
maintainers         {gmail.com:audvare @Tatsh}
description         DVD and Blu-ray disc stream ripper.
long_description    MakeMKV is your one-click solution to convert video that \
                    you own into free and patents-unencumbered format that \
                    can be played everywhere. MakeMKV is a format converter, \
                    otherwise called transcoder. It converts the video \
                    clips from proprietary (and usually encrypted) disc into \
                    a set of MKV files, preserving most information but not \
                    changing it in any way. The MKV format can store multiple \
                    video/audio tracks with all meta-information and preserve \
                    chapters. There are many players that can play MKV files \
                    nearly on all platforms, and there are tools to convert \
                    MKV files to many formats, including DVD and Blu-ray discs.
homepage            https://makemkv.com
supported_archs     x86_64

set special_dmg     ${name}_v${version}_osx.dmg
distfiles           ${special_dmg}
master_sites        https://makemkv.com/download/

livecheck.type      regex
livecheck.url       https://makemkv.com/download/
livecheck.regex     "MakeMKV (\\d+\\.\\d+\\.\\d+) for Mac OS X"

checksums           rmd160  018e0f32ced05bcdb3572bf187e1cdf1e10e2cce \
                    sha256  cce9311c109558acedc6d759666e1e18fc228fdcd6c98bb7323094a7ef271f6f \
                    size    24025207

depends_extract     bin:expect:expect

use_configure           no
configure.cxx_stdlib    libstdc++

extract {
    file mkdir ${worksrcpath}
    set mountpoint [my_attach_disk_image ${distpath}/${special_dmg}]
    copy ${mountpoint}/MakeMKV.app ${worksrcpath}
    my_detach_disk_image ${mountpoint}
}

build {}

destroot {
    copy ${worksrcpath}/MakeMKV.app ${destroot}${applications_dir}
    set apps {makemkv makemkvcon mmccextr}
    foreach name $apps {
      ln -s ${applications_dir}/MakeMKV.app/Contents/MacOS/${name} ${destroot}${prefix}/bin/${name}
    }
}

# Mounts a disk image.
proc my_attach_disk_image {disk_image} {
    global filespath name
    set mountpoint [mkdtemp /tmp/${name}.XXXXXXXX]
    # Use this expect script instead of using hdiutil directly, because the
    # disk image has a license agreement we must agree to.
    system "expect ${filespath}/attach.exp '${disk_image}' '${mountpoint}'"
    return ${mountpoint}
}

# Unmounts a disk image.
proc my_detach_disk_image {mountpoint} {
    system "hdiutil detach ${mountpoint} -force"
    file delete -force ${mountpoint}
}

if {${os.major} < 10} {
    pre-fetch {
        ui_error "${name} @${version} requires OS X 10.6 or later."
        return -code error "incompatible OS X version"
    }
}
