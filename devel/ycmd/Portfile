# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           cmake 1.1
PortGroup           github 1.0

github.setup            ycm-core ycmd 3aa00aea
version                 20201116
categories-append       textproc
maintainers             {gmail.com:audvare @Tatsh}
description             A code-completion engine for Vim.
long_description        ${description}

checksums           rmd160  65a2dcfd9f6e5712e70fd3ceef4ef94092ac66b1 \
                    sha256  72283eb747b77b31eacbd3a3249d61842f5fbb2d6858271b26d963856b74e118 \
                    size    3327746

worksrcdir  ${github.project}-${github.version}/cpp

set python_minor_version 8
set python_framework_dir ${frameworks_dir}/Python.framework/Versions/3.${python_minor_version}
configure.pre_args-append \
    -DCMAKE_CXX_COMPILER=clang++
configure.args \
    -DUSE_CLANG_COMPLETER=ON \
    -DUSE_SYSTEM_LIBCLANG=ON \
    -DPYTHON_LIBRARY=${python_framework_dir}/lib/libpython3.${python_minor_version}.dylib \
    -DPYTHON_INCLUDE_DIR=${python_framework_dir}/include/python3.${python_minor_version}

set clang_version 10

depends_lib \
    port:clang-${clang_version} \
    port:python3${python_minor_version}
depends_run \
    port:py3${python_minor_version}-bottle \
    port:py3${python_minor_version}-waitress \
    port:py3${python_minor_version}-regex \
    port:py3${python_minor_version}-jedi \
    port:py3${python_minor_version}-requests \
    port:py3${python_minor_version}-watchdog

patch.dir       ${worksrcpath}/..
patchfiles      gopls-path.patch \
                tern-path.patch

post-patch {
    file delete -force ${patch.dir}/ycmd/tests
    file delete -force ${patch.dir}/third_party
    reinplace -W ${patch.dir} \
        "s|^LIBCLANG_DIR =.*|LIBCLANG_DIR = '${prefix}/libexec/llvm-${clang_version}/lib'|" \
        ycmd/utils.py
    reinplace -W ${patch.dir} \
        "s|os.path.isfile( libclang_path ).*|os.path.isfile( libclang_path ) and libclang_path.endswith('.dylib'):|" ycmd/utils.py
    reinplace -W ${patch.dir} \
        "s|int( ReadFile( os.path.join( ROOT_DIR, 'CORE_VERSION' ) ) )|44|" \
        ycmd/utils.py
}

post-build {
    # FIXME Hack rpath in for now
    system "install_name_tool -rpath ${prefix}/lib ${prefix}/libexec/llvm-${clang_version}/lib ${worksrcpath}/../ycm_core.so"
    system "cd ${worksrcpath}/../ycmd && python -m compileall ."
}

destroot {
    xinstall -m 0755 -d ${destroot}${python_framework_dir}
    xinstall -m 0755 -d ${destroot}${python_framework_dir}/lib
    xinstall -m 0755 -d ${destroot}${python_framework_dir}/lib/python3.${python_minor_version}
    xinstall -m 0755 -d ${destroot}${python_framework_dir}/lib/python3.${python_minor_version}/site-packages
    xinstall -m 0755 ${worksrcpath}/../ycm_core.so \
        ${destroot}${python_framework_dir}/lib/python3.${python_minor_version}/site-packages/
    copy ${worksrcpath}/../ycmd ${destroot}${python_framework_dir}/lib/python3.${python_minor_version}/site-packages/
}

post-activate {
    ui_msg "For JavaScript and TypeScript completion, run the following:"
    ui_msg ""
    ui_msg "npm install -g tern typescript"
    ui_msg ""
    ui_msg "Then set the following in your vimrc:"
    ui_msg ""
    ui_msg "let g:ycm_tsserver_binary_path = '~/.node/bin/tsserver'"
    ui_msg ""
    ui_msg "For Go completion, install the gopls port."
    ui_msg ""
    ui_msg "For C# completion (not supported), install the mono port and "
    ui_msg "Omnisharp and set the path to OmniSharp.exe in your vimrc:"
    ui_msg ""
    ui_msg "let g:ycm_roslyn_binary_path = 'path/to/OmniSharp.exe'"
    ui_msg ""
    ui_msg "Please be sure to reference the documentation before filing bugs."
    ui_msg ""
    ui_msg "https://github.com/ycm-core/YouCompleteMe/blob/master/README.md"
    ui_msg ""
    ui_msg "Java and Rust support are not tested with this build."
}
