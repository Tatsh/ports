diff --git a/wakatime/api.py b/wakatime/api.py
index e95fafc..defb681 100644
--- a/wakatime/api.py
+++ b/wakatime/api.py
@@ -21,24 +21,15 @@ from .constants import API_ERROR, AUTH_ERROR, SUCCESS, UNKNOWN_ERROR
 from .offlinequeue import Queue
 from .session_cache import SessionCache
 from .utils import get_hostname, get_user_agent
-from .packages import tzlocal
-from .packages import certifi
+import tzlocal
+import certifi
 
 
 log = logging.getLogger('WakaTime')
 
 
-try:
-    from .packages import requests
-except ImportError:  # pragma: nocover
-    log.traceback(logging.ERROR)
-    print(traceback.format_exc())
-    log.error('Please upgrade Python to the latest version.')
-    print('Please upgrade Python to the latest version.')
-    sys.exit(UNKNOWN_ERROR)
-
-
-from .packages.requests.exceptions import RequestException
+import requests
+from requests.exceptions import RequestException
 
 
 def send_heartbeats(heartbeats, args, configs, use_ntlm_proxy=False):
@@ -91,7 +82,7 @@ def send_heartbeats(heartbeats, args, configs, use_ntlm_proxy=False):
     proxies = {}
     if args.proxy:
         if use_ntlm_proxy:
-            from .packages.requests_ntlm import HttpNtlmAuth
+            from requests_ntlm import HttpNtlmAuth
             username = args.proxy.rsplit(':', 1)
             password = ''
             if len(username) == 2:
@@ -190,7 +181,7 @@ def get_time_today(args, use_ntlm_proxy=False):
     proxies = {}
     if args.proxy:
         if use_ntlm_proxy:
-            from .packages.requests_ntlm import HttpNtlmAuth
+            from requests_ntlm import HttpNtlmAuth
             username = args.proxy.rsplit(':', 1)
             password = ''
             if len(username) == 2:
diff --git a/wakatime/arguments.py b/wakatime/arguments.py
index 54a12e4..e3b148f 100644
--- a/wakatime/arguments.py
+++ b/wakatime/arguments.py
@@ -21,7 +21,7 @@ from .__about__ import __version__
 from .compat import basestring
 from .configs import getConfigFile, parseConfigFile
 from .constants import AUTH_ERROR, DEFAULT_SYNC_OFFLINE_ACTIVITY, SUCCESS
-from .packages import argparse
+import argparse
 
 
 class FileAction(argparse.Action):
diff --git a/wakatime/compat.py b/wakatime/compat.py
index 0d6c461..b4056c7 100644
--- a/wakatime/compat.py
+++ b/wakatime/compat.py
@@ -99,10 +99,7 @@ except ImportError:  # pragma: nocover
         return sys.modules[name]
 
 
-try:
-    from .packages import simplejson as json
-except (ImportError, SyntaxError):  # pragma: nocover
-    import json
+import json
 
 
 class Popen(subprocess.Popen):
diff --git a/wakatime/configs.py b/wakatime/configs.py
index a9060b1..0857cce 100644
--- a/wakatime/configs.py
+++ b/wakatime/configs.py
@@ -18,11 +18,7 @@ import traceback
 from .compat import open
 from .constants import CONFIG_FILE_PARSE_ERROR
 
-
-try:
-    import configparser
-except ImportError:  # pragma: nocover
-    from .packages import configparser
+import configparser
 
 
 def getConfigFile():
diff --git a/wakatime/logger.py b/wakatime/logger.py
index 9bb51fe..3e61331 100644
--- a/wakatime/logger.py
+++ b/wakatime/logger.py
@@ -14,15 +14,9 @@ import os
 import traceback
 
 from .compat import u
-from .packages.requests.packages import urllib3
-try:
-    from collections import OrderedDict  # pragma: nocover
-except ImportError:  # pragma: nocover
-    from .packages.ordereddict import OrderedDict
-try:
-    from .packages import simplejson as json  # pragma: nocover
-except (ImportError, SyntaxError):  # pragma: nocover
-    import json
+import urllib3
+from collections import OrderedDict  # pragma: nocover
+import json
 
 
 class JsonFormatter(logging.Formatter):
diff --git a/wakatime/main.py b/wakatime/main.py
index 901c934..c542382 100644
--- a/wakatime/main.py
+++ b/wakatime/main.py
@@ -19,14 +19,6 @@ import traceback
 
 pwd = os.path.dirname(os.path.abspath(__file__))
 sys.path.insert(0, os.path.dirname(pwd))
-sys.path.insert(0, os.path.join(pwd, 'packages'))
-
-from .compat import is_py26
-
-if is_py26:
-    sys.path.insert(0, os.path.join(pwd, 'packages', 'py26'))
-else:
-    sys.path.insert(0, os.path.join(pwd, 'packages', 'py27'))
 
 from .__about__ import __version__
 from .api import send_heartbeats, get_time_today
diff --git a/wakatime/projects/subversion.py b/wakatime/projects/subversion.py
index ac6487b..e05f7c4 100644
--- a/wakatime/projects/subversion.py
+++ b/wakatime/projects/subversion.py
@@ -16,10 +16,7 @@ from subprocess import PIPE
 
 from .base import BaseProject
 from ..compat import u, open, Popen
-try:
-    from collections import OrderedDict
-except ImportError:  # pragma: nocover
-    from ..packages.ordereddict import OrderedDict  # pragma: nocover
+from collections import OrderedDict
 
 
 log = logging.getLogger('WakaTime')
diff --git a/wakatime/session_cache.py b/wakatime/session_cache.py
index 2e88ef0..6fd8faf 100644
--- a/wakatime/session_cache.py
+++ b/wakatime/session_cache.py
@@ -23,7 +23,7 @@ except ImportError:  # pragma: nocover
 
 sys.path.insert(0, os.path.join(os.path.dirname(os.path.abspath(__file__)), 'packages'))
 
-from .packages import requests
+import requests
 
 
 log = logging.getLogger('WakaTime')
diff --git a/wakatime/stats.py b/wakatime/stats.py
index 8b3d4ee..c9cd2c4 100644
--- a/wakatime/stats.py
+++ b/wakatime/stats.py
@@ -20,8 +20,7 @@ from .dependencies import DependencyParser
 from .exceptions import SkipHeartbeat
 from .language_priorities import LANGUAGES
 
-if is_py26:
-    from .packages.py26.pygments.lexers import (
+from pygments.lexers import (
         _iter_lexerclasses,
         _fn_matches,
         basename,
@@ -30,24 +29,8 @@ if is_py26:
         find_lexer_class,
         get_lexer_by_name,
     )
-    from .packages.py26.pygments.modeline import get_filetype_from_buffer
-else:
-    from .packages.py27.pygments.lexers import (
-        _iter_lexerclasses,
-        _fn_matches,
-        basename,
-        ClassNotFound,
-        CppLexer,
-        find_lexer_class,
-        get_lexer_by_name,
-    )
-    from .packages.py27.pygments.modeline import get_filetype_from_buffer
-
-
-try:
-    from .packages import simplejson as json  # pragma: nocover
-except (ImportError, SyntaxError):  # pragma: nocover
-    import json
+from pygments.modeline import get_filetype_from_buffer
+import json
 
 
 log = logging.getLogger('WakaTime')
